{"version":3,"sources":["screens/login.js","db/firebase.js","screens/mainScreen.js","screens/createNew.js","screens/suggestions.js","navigation/navigation.js","App.js"],"names":["LoginScreen","x","useState","userName","setUserName","pwd","setPwd","View","style","styles","container","TextInput","placeholder","value","onChangeText","borderColor","borderWidth","width","height","paddingLeft","borderRadius","secureTextEntry","marginVertical","TouchableOpacity","justifyContent","alignItems","marginHorizontal","backgroundColor","onPress","navigation","replace","Text","StyleSheet","create","flex","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","dbx","getFirestore","Dimensions","get","MainScreen","inkpot","setInkpot","loaded","setLoaded","modalVis","setModalVis","chosenDelete","setChosenDelete","chosenId","setChosenId","load","setLoad","useLayoutEffect","onSnapshot","collection","snap","data","docs","map","docx","modalBack","FlatList","showsVerticalScrollIndicator","renderItem","item","Component","title","id","dbCollectionChat","keyExtractor","index","toString","ListFooterComponentStyle","ListFooterComponent","position","top","left","navigate","right","Modal","visible","animationType","onRequestClose","ActivityIndicator","size","color","marginTop","flexDirection","paddingVertical","paddingHorizontal","fontWeight","a","async","deleteDoc","doc","console","warn","y","CreateNew","setTitle","bck","setBck","img","setImg","rank","setRank","intensity","setIntensity","borderBottomColor","borderBottomWidth","selectedValue","mode","onValueChange","Item","label","marginLeft","Image","source","uri","Math","ceil","random","setDoc","background","imageUrl","pop","Suggestions","sugg","setSugg","topic","description","ComponentX","Stack","createNativeStackNavigator","MainStack","NavigationContainer","Navigator","Screen","name","component","options","headerShown","App"],"mappings":"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","file":"static/js/app.12f943cc.chunk.js","sourcesContent":["import React,{useState} from 'react';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { StyleSheet, Text, View, TextInput, TouchableOpacity } from 'react-native';\r\n\r\nexport default function LoginScreen(x) {\r\n\r\n    const [userName, setUserName] = useState()\r\n    const [pwd, setPwd] = useState()\r\n\r\n    function press() {\r\n        if(userName == \"portalUser\" && pwd == \"portalPassword\"){\r\n            x.navigation.replace(\"MainScreen\")\r\n        }\r\n    }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n        <View>\r\n            <TextInput \r\n                placeholder='UserName'\r\n                value={userName}\r\n                onChangeText={(x)=>{setUserName(x)}}\r\n                style={{\r\n                    borderColor:\"black\",\r\n                    borderWidth:1,\r\n                    width:200,\r\n                    height:40,\r\n                    paddingLeft:9,\r\n                    borderRadius:6\r\n                }}\r\n            />\r\n             <TextInput \r\n                placeholder='Password'\r\n                value={pwd}\r\n                secureTextEntry\r\n                onChangeText={(x)=>{setPwd(x)}}\r\n                style={{\r\n                    borderColor:\"black\",\r\n                    borderWidth:1,\r\n                    width:200,\r\n                    height:40,\r\n                    paddingLeft:9,\r\n                    borderRadius:6,\r\n                    marginVertical:20\r\n                }}\r\n            />\r\n            <TouchableOpacity style={{borderColor:\"black\", borderWidth:1, justifyContent:\"center\",alignItems:\"center\", width:150,height:30, marginHorizontal:25, borderRadius:9, backgroundColor:\"lightyellow\"}} onPress={press} >\r\n                <Text>LOGIN</Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n","import {initializeApp} from 'firebase/app'\r\nimport {getFirestore} from 'firebase/firestore'\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAkn0cePxtP3VfRL3_zc-CQ_mal9bHlm_A\",\r\n  authDomain: \"raye-db1.firebaseapp.com\",\r\n  projectId: \"raye-db1\",\r\n  storageBucket: \"raye-db1.appspot.com\",\r\n  messagingSenderId: \"564616544197\",\r\n  appId: \"1:564616544197:web:278d5549cb625f28c915ac\"\r\n};\r\n\r\n\r\ninitializeApp(firebaseConfig);\r\nexport const dbx = getFirestore();","import React, {useState, useLayoutEffect} from \"react\";\r\nimport { View, Text, Dimensions, TouchableOpacity, ActivityIndicator, FlatList, Modal, TextInput } from \"react-native\";\r\nimport { dbx } from \"../db/firebase\";\r\nimport { collection, onSnapshot, doc, deleteDoc} from \"firebase/firestore\"\r\n\r\nconst {width, height} = Dimensions.get(\"window\")\r\n\r\n\r\nexport default function MainScreen(x) {\r\n\r\n    const [inkpot, setInkpot] = useState()\r\n    const [loaded, setLoaded] = useState(false)\r\n    const [modalVis, setModalVis] = useState(false)\r\n    const [chosenDelete, setChosenDelete] = useState(\"\")\r\n    const [chosenId, setChosenId] = useState()\r\n    const [userName, setUserName] = useState(\"\")\r\n    const [pwd, setPwd] = useState(\"\")\r\n    const [load, setLoad] = useState(false)\r\n\r\n    useLayoutEffect(()=>{\r\n        if(loaded == false){\r\n            const unsub = onSnapshot(collection(dbx, \"inkpot\"), (snap)=>{\r\n                const data = snap.docs.map(docx => docx.data())\r\n                setInkpot(data)})\r\n            return (unsub,\r\n            setLoaded(true))\r\n        }\r\n    })\r\n\r\n\r\n    function deleteIt(title, id) {\r\n       setModalVis(true)\r\n       setChosenDelete(title)\r\n       setChosenId(id)\r\n    }\r\n\r\n    function newer() {\r\n        x.navigation.navigate(\"Create\")\r\n    }\r\n\r\n    const confirmDelete = async () => {\r\n        if(userName == \"command\" && pwd == \"command\"){\r\n            try{\r\n                setLoad(true)\r\n                await deleteDoc(doc(dbx, \"inkpot\", chosenId.toString()));\r\n                setChosenId(\"\")\r\n                setChosenDelete(\"\")\r\n                setUserName(\"\")\r\n                setPwd(\"\")\r\n                setLoad(false)\r\n                setModalVis(false)\r\n            }\r\n            catch(e){\r\n                setLoad(false)\r\n                console.warn(e)\r\n                setChosenId(\"\")\r\n                setChosenDelete(\"\")\r\n                setUserName(\"\")\r\n                setPwd(\"\")\r\n                setModalVis(false)\r\n            }\r\n        }\r\n    }\r\n\r\n    const modalBack = () => {\r\n        setChosenDelete(\"\")\r\n        setChosenId(\"\")\r\n        setUserName(\"\")\r\n        setPwd(\"\")\r\n        setModalVis(false)\r\n    }\r\n\r\n    if(!inkpot){\r\n        return(\r\n            <View style={{flex:1, backgroundColor:\"white\", alignItems:\"center\", justifyContent:\"center\"}}>\r\n                <ActivityIndicator size=\"large\" color=\"black\" />\r\n            </View>\r\n        )\r\n    }\r\n    else {\r\n        return(\r\n            <View style={{justifyContent:\"center\",alignItems:\"center\",flex:1}}>\r\n                <FlatList \r\n                     showsVerticalScrollIndicator={false}\r\n                     data={inkpot}\r\n                     renderItem={({item})=>{return(\r\n                                                <Component \r\n                                                    title={item.title}\r\n                                                    id={item.dbCollectionChat}\r\n                                                />\r\n                     )}} \r\n                    keyExtractor={(item, index) => { return(index.toString())}}\r\n                    ListFooterComponentStyle={{flex:1, justifyContent: 'flex-end'}}\r\n                    ListFooterComponent={<View style={{height:160}}/> }   \r\n                />\r\n                <TouchableOpacity style={{backgroundColor:\"lightyellow\",width:120,height:90, position:\"absolute\",top:height-70, borderRadius:20, borderColor:\"grey\",borderWidth:1, justifyContent:\"center\",alignItems:\"center\", left:40}} onPress={newer} >\r\n                    <Text>NEW</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity style={{backgroundColor:\"lightyellow\",width:120,height:90, position:\"absolute\",top:height-70, borderRadius:20, borderColor:\"grey\",borderWidth:1, justifyContent:\"center\",alignItems:\"center\", right:40}} onPress={()=>{x.navigation.navigate(\"Suggestions\")}} >\r\n                    <Text>SUGGESTIONS</Text>\r\n                </TouchableOpacity>\r\n\r\n                <Modal visible={modalVis} animationType=\"slide\" onRequestClose={modalBack} >\r\n                        {load == true ? (\r\n                            <View style={{flex:1, backgroundColor:\"white\", alignItems:\"center\", justifyContent:\"center\"}}>\r\n                                <ActivityIndicator size=\"large\" color=\"black\" />\r\n                            </View>\r\n                        ) : (\r\n                        <View style={{marginTop:200,alignItems:\"center\"}} >\r\n                            <View style={{flexDirection:\"row\",borderColor:\"black\",borderWidth:1,paddingVertical:7,paddingHorizontal:7}}>\r\n                                <Text>DELETE </Text>\r\n                                <Text style={{fontWeight:\"bold\"}} >{chosenDelete}</Text>\r\n                                <Text>?</Text>\r\n                            </View>\r\n                            <View style={{justifyContent:\"center\",alignItems:\"center\"}}>\r\n                            <TextInput \r\n                                placeholder='UserName'\r\n                                value={userName}\r\n                                onChangeText={(x)=>{setUserName(x)}}\r\n                                style={{\r\n                                    borderColor:\"black\",\r\n                                    borderWidth:1,\r\n                                    width:200,\r\n                                    height:40,\r\n                                    paddingLeft:9,\r\n                                    borderRadius:6,\r\n                                    marginTop:10\r\n                                }}\r\n                            />\r\n                            <TextInput \r\n                                placeholder='Password'\r\n                                value={pwd}\r\n                                secureTextEntry\r\n                                onChangeText={(x)=>{setPwd(x)}}\r\n                                style={{\r\n                                    borderColor:\"black\",\r\n                                    borderWidth:1,\r\n                                    width:200,\r\n                                    height:40,\r\n                                    paddingLeft:9,\r\n                                    borderRadius:6,\r\n                                    marginVertical:20\r\n                                }}\r\n                            />\r\n                            <TouchableOpacity style={{borderColor:\"black\", borderWidth:1, justifyContent:\"center\",alignItems:\"center\", width:150,height:30, marginHorizontal:25, borderRadius:9, backgroundColor:\"red\"}} onPress={confirmDelete} >\r\n                                <Text>CONFIRM</Text>\r\n                            </TouchableOpacity>\r\n                            <TouchableOpacity style={{borderColor:\"black\", borderWidth:1, justifyContent:\"center\",alignItems:\"center\", width:150,height:30, marginHorizontal:25, borderRadius:9, backgroundColor:\"white\", marginTop:15}} onPress={modalBack} >\r\n                                <Text>CANCEL</Text>\r\n                            </TouchableOpacity>\r\n                            </View>\r\n\r\n                        </View>\r\n                        )}\r\n                </Modal>\r\n\r\n            </View>\r\n        )\r\n    }\r\n\r\n\r\n    function Component(y) {\r\n        return(\r\n            <View style={{width:320,height:140,borderRadius:30, borderColor:\"grey\",borderWidth:1,justifyContent:\"center\", alignItems:\"center\", marginTop:50}}>\r\n                <View style={{flexDirection:\"row\"}}>\r\n                    <Text>TITLE: </Text>\r\n                    <Text style={{color:\"grey\"}} >{y.title}</Text>\r\n                </View>\r\n                <TouchableOpacity style={{backgroundColor:\"red\", width:100,height:50, marginTop:20, borderRadius:10, justifyContent:\"center\", alignItems:\"center\"}} onPress={()=>{deleteIt(y.title,y.id)}} >\r\n                    <Text style={{color:\"white\"}} > Delete </Text>\r\n                </TouchableOpacity>           \r\n            </View>\r\n        )\r\n    }\r\n\r\n}","import React,{useState} from \"react\";\r\nimport { View, Text, Dimensions, TouchableOpacity, TextInput, Modal, Image, ActivityIndicator} from \"react-native\";\r\nimport {Picker} from '@react-native-picker/picker';\r\nimport { dbx } from \"../db/firebase\";\r\nimport { collection, setDoc, doc } from \"firebase/firestore\"; \r\n\r\nexport default function  CreateNew(x) {\r\n\r\n    const [title,setTitle] = useState(\"\")\r\n    const [bck,setBck] = useState(\"\")\r\n    const [img,setImg] = useState(\"\")\r\n    const [rank,setRank] = useState(\"LOCAL\")\r\n    const [intensity,setIntensity] = useState(\"TALKED ABOUT\")\r\n    const [modalVis, setModalVis] = useState(false)\r\n    const [userName, setUserName] = useState(\"\")\r\n    const [pwd, setPwd] = useState(\"\")\r\n    const [load,setLoad] = useState(false)\r\n\r\n    function modalActivator(){\r\n        if(title && img && bck){\r\n            setModalVis(true)\r\n        }\r\n    }\r\n\r\n    const press = async () => {\r\n        if(userName == \"command\" && pwd == \"command\"){\r\n            const id = Math.ceil(Math.random()*1000000)\r\n            setLoad(true)\r\n            try{\r\n                await setDoc(doc(dbx,\"inkpot\",id.toString()),{\r\n                    background:bck,\r\n                    title:title,\r\n                    imageUrl: img,\r\n                    intensity:intensity,\r\n                    rank:rank,\r\n                    dbCollectionChat: id.toString(),\r\n                })\r\n                setTitle(\"\")\r\n                setBck(\"\")\r\n                setImg(\"\")\r\n                setRank(\"LOCAL\")\r\n                setIntensity(\"TALKED ABOUT\")\r\n                setUserName(\"\")\r\n                setPwd(\"\")\r\n                setLoad(false)\r\n                setModalVis(false)\r\n                x.navigation.pop()\r\n            }\r\n            catch(e){\r\n            }\r\n        }\r\n    }\r\n\r\n    if(load){\r\n        return(\r\n            <View style={{flex:1, backgroundColor:\"white\", alignItems:\"center\", justifyContent:\"center\"}}>\r\n                <ActivityIndicator size=\"large\" color=\"black\" />\r\n            </View>\r\n        )\r\n    } else {\r\n        return(\r\n            <View style={{justifyContent:\"center\",alignItems:\"center\",flex:1,backgroundColor:\"white\"}} >\r\n               <View>\r\n               <TextInput \r\n                    placeholder='Title'\r\n                    value={title}\r\n                    onChangeText={(x)=>{setTitle(x)}}\r\n                    style={{\r\n                        borderColor:\"black\",\r\n                        borderWidth:1,\r\n                        width:200,\r\n                        height:40,\r\n                        paddingLeft:9,\r\n                        borderRadius:6\r\n                    }}\r\n                />\r\n                 <TextInput \r\n                    placeholder='Background'\r\n                    value={bck}\r\n                    onChangeText={(x)=>{setBck(x)}}\r\n                    style={{\r\n                        borderColor:\"black\",\r\n                        borderWidth:1,\r\n                        width:200,\r\n                        height:40,\r\n                        paddingLeft:9,\r\n                        borderRadius:6,\r\n                        marginTop:20\r\n                    }}\r\n                />\r\n                 <TextInput \r\n                    placeholder='Image Url'\r\n                    value={img}\r\n                    onChangeText={(x)=>{setImg(x)}}\r\n                    style={{\r\n                        borderColor:\"black\",\r\n                        borderWidth:1,\r\n                        width:200,\r\n                        height:40,\r\n                        paddingLeft:9,\r\n                        borderRadius:6,\r\n                        marginTop:20\r\n                    }}\r\n                />\r\n                <Text style={{marginTop:20,borderBottomColor:\"black\",borderBottomWidth:1,width:90}}>RANK:</Text>\r\n                <Picker style={{borderColor:\"black\",borderWidth:1}} selectedValue={rank} mode=\"dropdown\" onValueChange={(value)=>{setRank(value)}} >\r\n                            <Picker.Item label=\"LOCAL\" value=\"LOCAL\" />\r\n                            <Picker.Item label=\"NATIONAL\" value=\"NATIONAL\" />\r\n                            <Picker.Item label=\"INTERNATIONAL\" value=\"INTERNATIONAL\" />\r\n                            <Picker.Item label=\"GLOBAL AFFAIR\" value=\"GLOBAL AFFAIR\" />\r\n                 </Picker>\r\n                 <Text style={{marginTop:20,borderBottomColor:\"black\",borderBottomWidth:1,width:90}}>INTENSITY:</Text>\r\n                <Picker style={{borderColor:\"black\",borderWidth:1}} selectedValue={intensity} mode=\"dropdown\" onValueChange={(value)=>{setIntensity(value)}} >\r\n                            <Picker.Item label=\"TALKED ABOUT\" value=\"TALKED ABOUT\" />\r\n                            <Picker.Item label=\"HOT\" value=\"HOT\" />\r\n                            <Picker.Item label=\"IN CONSIDERATION\" value=\"IN CONSIDERATION\" />\r\n                 </Picker>\r\n    \r\n                 <TouchableOpacity style={{backgroundColor:\"lightyellow\",width:100,height:50,borderRadius:20, borderColor:\"grey\",borderWidth:1, justifyContent:\"center\",alignItems:\"center\", marginTop:20, marginLeft:50}} onPress={modalActivator}>\r\n                    <Text>ADD</Text>\r\n                </TouchableOpacity>\r\n    \r\n                <Modal visible={modalVis} animationType=\"slide\" onRequestClose={()=>{setModalVis(false)}}>\r\n                    <View style={{justifyContent:\"center\",flex:1, marginHorizontal:20}}>\r\n                        <View style={{flexDirection:\"row\",borderColor:\"grey\",borderWidth:1,paddingHorizontal:7,paddingVertical:7}}>\r\n                            <Text>Title: </Text>\r\n                            <Text style={{fontWeight:\"bold\"}}>{title}</Text>\r\n                        </View>\r\n                        <View style={{flexDirection:\"row\",borderColor:\"grey\",borderWidth:1,paddingHorizontal:7,paddingVertical:7, marginTop:9}}>\r\n                            <Text>Background: </Text>\r\n                            <Text style={{fontWeight:\"bold\"}}>{bck}</Text>\r\n                        </View>\r\n                        <View style={{flexDirection:\"row\",borderColor:\"grey\",borderWidth:1,paddingHorizontal:7,paddingVertical:7, marginTop:9}}>\r\n                            <Text>IMAGE URL:  </Text>\r\n                            <Text style={{fontWeight:\"bold\"}}>{bck}</Text>\r\n                        </View>\r\n                        <View style={{flexDirection:\"row\",borderColor:\"grey\",borderWidth:1,paddingHorizontal:7,paddingVertical:7, marginTop:9}}>\r\n                            <Text>RANK:  </Text>\r\n                            <Text style={{fontWeight:\"bold\"}}>{rank}</Text>\r\n                        </View>\r\n                        <View style={{flexDirection:\"row\",borderColor:\"grey\",borderWidth:1,paddingHorizontal:7,paddingVertical:7, marginTop:9}}>\r\n                            <Text>INTENSITY:  </Text>\r\n                            <Text style={{fontWeight:\"bold\"}}>{intensity}</Text>\r\n                        </View>\r\n                        <View style={{justifyContent:\"center\",alignItems:\"center\"}}>\r\n                            <Image style={{width:150,height:100, marginTop:20, borderColor:\"black\", borderWidth:2}} source={{uri : img}} />\r\n                        </View>\r\n                        <View style={{borderBottomColor:\"black\",borderBottomWidth:1,width:300, marginTop:7, marginLeft:27}} />\r\n                        <View style={{justifyContent:\"center\",alignItems:\"center\"}}>\r\n                            <TextInput \r\n                                placeholder='UserName'\r\n                                value={userName}\r\n                                onChangeText={(x)=>{setUserName(x)}}\r\n                                style={{\r\n                                    borderColor:\"black\",\r\n                                    borderWidth:1,\r\n                                    width:200,\r\n                                    height:40,\r\n                                    paddingLeft:9,\r\n                                    borderRadius:6,\r\n                                    marginTop:7\r\n                                }}\r\n                            />\r\n                            <TextInput \r\n                                placeholder='Password'\r\n                                secureTextEntry\r\n                                value={pwd}\r\n                                onChangeText={(x)=>{setPwd(x)}}\r\n                                style={{\r\n                                    borderColor:\"black\",\r\n                                    borderWidth:1,\r\n                                    width:200,\r\n                                    height:40,\r\n                                    paddingLeft:9,\r\n                                    borderRadius:6,\r\n                                    marginVertical:20\r\n                                }}\r\n                            />\r\n                            <TouchableOpacity style={{borderColor:\"black\", borderWidth:1, justifyContent:\"center\",alignItems:\"center\", width:150,height:30, marginHorizontal:25, borderRadius:9, backgroundColor:\"lightyellow\"}} onPress={press} >\r\n                                <Text>CONFIRM</Text>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                    </View>\r\n                </Modal>\r\n                \r\n               </View>\r\n            </View>\r\n        )\r\n    }\r\n\r\n}","import React,{useState,useLayoutEffect} from \"react\";\r\nimport { View, Text, FlatList, ActivityIndicator } from \"react-native\";\r\n\r\nimport { dbx } from \"../db/firebase\";\r\nimport { collection, onSnapshot} from \"firebase/firestore\"\r\n\r\n\r\nexport default function Suggestions() {\r\n\r\n    const [sugg, setSugg] = useState()\r\n    const [loaded, setLoaded] = useState(false)\r\n\r\n    useLayoutEffect(()=>{\r\n        if(loaded == false){\r\n            const unsub = onSnapshot(collection(dbx, \"topic_suggestion\"), (snap)=>{\r\n                const data = snap.docs.map(docx => docx.data())\r\n                setSugg(data)})\r\n            return (unsub,\r\n            setLoaded(true))\r\n        }\r\n    })\r\n\r\n\r\n    if(!sugg){\r\n        return(\r\n            <View style={{flex:1, backgroundColor:\"white\", alignItems:\"center\", justifyContent:\"center\"}}>\r\n                <ActivityIndicator size=\"large\" color=\"black\" />\r\n            </View>\r\n        )\r\n    }\r\n    else {\r\n        return(\r\n            <View style={{justifyContent:\"center\",alignItems:\"center\"}}>\r\n                <FlatList \r\n                         showsVerticalScrollIndicator={false}\r\n                         data={sugg}\r\n                         renderItem={({item})=>{return(\r\n                                                    <ComponentX\r\n                                                        topic={item.topic}\r\n                                                        description={item.description}\r\n                                                    />\r\n                         )}} \r\n                        keyExtractor={(item, index) => { return(index.toString())}}   \r\n                    />\r\n            </View>\r\n        )\r\n    }\r\n\r\n\r\n    \r\n}\r\nconst ComponentX = (y) => {\r\n    return (\r\n        <View style={{width:350,height:180,borderRadius:30, borderColor:\"grey\",borderWidth:1,justifyContent:\"center\", marginTop:50}}>\r\n            <View style={{flexDirection:\"row\", marginLeft:30}}>\r\n                <Text style={{fontWeight:\"bold\"}} >TOPIC:  </Text>\r\n                <Text>{y.topic}</Text>\r\n            </View>\r\n            <View style={{flexDirection:\"row\", marginLeft:30, width:170}}>\r\n                <Text style={{fontWeight:\"bold\"}} >DESCRIPTION:  </Text>\r\n                <Text>{y.description}</Text>\r\n            </View>\r\n        </View>\r\n    )\r\n}","import { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\n\r\nimport LoginScreen from '../screens/login';\r\nimport MainScreen from '../screens/mainScreen';\r\nimport CreateNew from '../screens/createNew';\r\nimport Suggestions from '../screens/suggestions';\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nconst MainStack = () => {\r\n    return (\r\n        <NavigationContainer>\r\n            <Stack.Navigator>\r\n                <Stack.Screen name=\"login\"  component={LoginScreen} options={{headerShown:false}} />\r\n                <Stack.Screen name=\"MainScreen\"  component={MainScreen} options={{headerShown:false}} />\r\n                <Stack.Screen name=\"Create\"  component={CreateNew} />    \r\n                <Stack.Screen name=\"Suggestions\"  component={Suggestions} />                \r\n            </Stack.Navigator>\r\n        </NavigationContainer>\r\n    )\r\n}\r\n\r\nexport default MainStack\r\n","import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View } from 'react-native';\n\nimport MainStack from './navigation/navigation';\n\nexport default function App() {\n  return (\n    <MainStack />\n  );\n}\n"],"sourceRoot":""}